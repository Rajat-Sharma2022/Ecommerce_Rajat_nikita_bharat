<?php

namespace ContainerBPqIAxj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getOAuthRegistrationHandlerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'CustomerManagementFrameworkBundle\Security\OAuth\OAuthRegistrationHandler' shared autowired service.
     *
     * @return \CustomerManagementFrameworkBundle\Security\OAuth\OAuthRegistrationHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/Security/OAuth/OAuthRegistrationHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/Security/OAuth/TokenStorageInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/Security/OAuth/SessionTokenStorage.php';
        include_once \dirname(__DIR__, 4).'/vendor/hwi/oauth-bundle/Connect/AccountConnectorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/Security/OAuth/AccountConnectorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/Security/OAuth/AccountConnector.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/Encryption/EncryptionServiceInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/Encryption/DefaultEncryptionService.php';

        $a = ($container->privates['hwi_oauth.security.oauth_utils'] ?? $container->getHwiOauth_Security_OauthUtilsService());

        if (isset($container->privates['CustomerManagementFrameworkBundle\\Security\\OAuth\\OAuthRegistrationHandler'])) {
            return $container->privates['CustomerManagementFrameworkBundle\\Security\\OAuth\\OAuthRegistrationHandler'];
        }
        $b = ($container->privates['CustomerManagementFrameworkBundle\\Security\\SsoIdentity\\DefaultSsoIdentityService'] ?? $container->load('getDefaultSsoIdentityServiceService'));

        return $container->privates['CustomerManagementFrameworkBundle\\Security\\OAuth\\OAuthRegistrationHandler'] = new \CustomerManagementFrameworkBundle\Security\OAuth\OAuthRegistrationHandler($a, new \CustomerManagementFrameworkBundle\Security\OAuth\SessionTokenStorage(($container->services['.container.private.session'] ?? $container->get_Container_Private_SessionService())), $b, new \CustomerManagementFrameworkBundle\Security\OAuth\AccountConnector($b, ($container->services['CustomerManagementFrameworkBundle\\Encryption\\DefaultEncryptionService'] ?? ($container->services['CustomerManagementFrameworkBundle\\Encryption\\DefaultEncryptionService'] = new \CustomerManagementFrameworkBundle\Encryption\DefaultEncryptionService('yB29vv8E2nJEnJZExaYaSsYioZKuz4eYEnvPhr7Fy9k=')))));
    }
}
