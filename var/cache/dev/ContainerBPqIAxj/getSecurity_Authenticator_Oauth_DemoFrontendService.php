<?php

namespace ContainerBPqIAxj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_Oauth_DemoFrontendService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'security.authenticator.oauth.demo_frontend' shared service.
     *
     * @return \HWI\Bundle\OAuthBundle\Security\Http\Authenticator\OAuthAuthenticator
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authenticator/AuthenticatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/hwi/oauth-bundle/Security/Http/Authenticator/OAuthAuthenticator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/AuthenticationSuccessHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Util/TargetPathTrait.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/DefaultAuthenticationSuccessHandler.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/AuthenticationFailureHandlerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-http/Authentication/DefaultAuthenticationFailureHandler.php';

        $a = ($container->privates['security.http_utils'] ?? $container->getSecurity_HttpUtilsService());
        $b = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler($a, [], ($container->privates['monolog.logger'] ?? $container->getMonolog_LoggerService()));
        $b->setOptions(['login_path' => 'account-login', 'always_use_default_target_path' => false, 'default_target_path' => '/', 'target_path_parameter' => '_target_path', 'use_referer' => false]);
        $b->setFirewallName('demo_frontend');
        $c = ($container->services['http_kernel'] ?? $container->getHttpKernelService());

        if (isset($container->privates['security.authenticator.oauth.demo_frontend'])) {
            return $container->privates['security.authenticator.oauth.demo_frontend'];
        }

        $d = new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler($c, $a, [], ($container->services['monolog.logger.security'] ?? $container->getMonolog_Logger_SecurityService()));
        $d->setOptions(['login_path' => 'account-login', 'failure_path' => 'account-login', 'failure_forward' => false, 'failure_path_parameter' => '_failure_path']);

        return $container->privates['security.authenticator.oauth.demo_frontend'] = new \HWI\Bundle\OAuthBundle\Security\Http\Authenticator\OAuthAuthenticator($a, ($container->privates['cmf.security.user_provider.oauth'] ?? $container->load('getCmf_Security_UserProvider_OauthService')), ($container->services['hwi_oauth.resource_ownermap.demo_frontend'] ?? $container->getHwiOauth_ResourceOwnermap_DemoFrontendService()), $container->parameters['hwi_oauth.resource_ownermap.configured.demo_frontend'], $b, $d);
    }
}
