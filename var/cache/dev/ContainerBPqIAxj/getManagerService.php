<?php

namespace ContainerBPqIAxj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getManagerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the public 'Pimcore\Workflow\Manager' shared autowired service.
     *
     * @return \Pimcore\Workflow\Manager
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Workflow/Manager.php';

        $a = ($container->services['event_dispatcher'] ?? $container->getEventDispatcherService());

        if (isset($container->services['Pimcore\\Workflow\\Manager'])) {
            return $container->services['Pimcore\\Workflow\\Manager'];
        }
        $b = ($container->privates['workflow.registry'] ?? $container->load('getWorkflow_RegistryService'));

        if (isset($container->services['Pimcore\\Workflow\\Manager'])) {
            return $container->services['Pimcore\\Workflow\\Manager'];
        }

        $container->services['Pimcore\\Workflow\\Manager'] = $instance = new \Pimcore\Workflow\Manager($b, ($container->privates['Pimcore\\Workflow\\EventSubscriber\\NotesSubscriber'] ?? $container->load('getNotesSubscriberService')), ($container->services['Pimcore\\Workflow\\ExpressionService'] ?? $container->load('getExpressionServiceService')), $a);

        $instance->registerWorkflow('simple_asset_workflow', ['label' => 'Simple Asset Workflow', 'priority' => 0, 'type' => 'state_machine']);
        $instance->addPlaceConfig('simple_asset_workflow', 'start', ['label' => 'Start Place of the Workflow', 'title' => 'Start checking this asset', 'color' => '#3572b0', 'visibleInHeader' => true, 'colorInverted' => false, 'permissions' => []]);
        $instance->addPlaceConfig('simple_asset_workflow', 'review_license', ['label' => 'Review License', 'color' => 'orange', 'visibleInHeader' => true, 'title' => '', 'colorInverted' => false, 'permissions' => []]);
        $instance->addPlaceConfig('simple_asset_workflow', 'finished', ['label' => 'Asset Reviewed', 'color' => 'green', 'visibleInHeader' => true, 'title' => '', 'colorInverted' => false, 'permissions' => []]);
        $instance->registerWorkflow('product_data_enrichment', ['label' => 'Product Data Enrichment Workflow', 'priority' => 0, 'type' => 'workflow']);
        $instance->addPlaceConfig('product_data_enrichment', 'todo', ['label' => 'ToDo', 'title' => 'Product Magic did not start', 'color' => '#3572b0', 'colorInverted' => true, 'permissions' => [0 => ['objectLayout' => 'CarTodo', 'publish' => false, 'unpublish' => false]], 'visibleInHeader' => true]);
        $instance->addPlaceConfig('product_data_enrichment', 'edit_text', ['label' => 'Edit Text', 'color' => 'orange', 'permissions' => [0 => ['publish' => false, 'unpublish' => false]], 'title' => '', 'colorInverted' => false, 'visibleInHeader' => true]);
        $instance->addPlaceConfig('product_data_enrichment', 'edit_images', ['label' => 'Edit Images', 'color' => 'orange', 'permissions' => [0 => ['publish' => false, 'unpublish' => false]], 'title' => '', 'colorInverted' => false, 'visibleInHeader' => true]);
        $instance->addPlaceConfig('product_data_enrichment', 'done_text', ['label' => 'Done Text', 'color' => 'green', 'permissions' => [0 => ['publish' => false, 'unpublish' => false]], 'title' => '', 'colorInverted' => false, 'visibleInHeader' => true]);
        $instance->addPlaceConfig('product_data_enrichment', 'done_images', ['label' => 'Done Images', 'color' => 'green', 'permissions' => [0 => ['publish' => false, 'unpublish' => false]], 'title' => '', 'colorInverted' => false, 'visibleInHeader' => true]);
        $instance->addPlaceConfig('product_data_enrichment', 'done_all', ['label' => 'Product is ready', 'color' => '#009900', 'permissions' => [0 => ['condition' => 'is_fully_authenticated() and \'ROLE_PIMCORE_ADMIN\' in role_names', 'objectLayout' => 'CarReview'], 1 => ['objectLayout' => 'CarReview']], 'title' => '', 'colorInverted' => false, 'visibleInHeader' => true]);
        $instance->addGlobalAction('product_data_enrichment', 'log_time', ['label' => 'Log Time', 'guard' => 'is_fully_authenticated()', 'notes' => ['commentEnabled' => true, 'commentRequired' => true, 'type' => 'Worklog', 'title' => 'Time Logged', 'additionalFields' => [0 => ['name' => 'timeWorked', 'fieldType' => 'input', 'title' => 'Time spent', 'required' => true, 'fieldTypeSettings' => []]]], 'objectLayout' => false, 'to' => []], NULL);

        return $instance;
    }
}
