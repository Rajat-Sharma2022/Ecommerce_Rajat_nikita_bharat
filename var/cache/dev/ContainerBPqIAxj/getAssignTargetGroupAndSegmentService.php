<?php

namespace ContainerBPqIAxj;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getAssignTargetGroupAndSegmentService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'CustomerManagementFrameworkBundle\Targeting\ActionHandler\AssignTargetGroupAndSegment' shared autowired service.
     *
     * @return \CustomerManagementFrameworkBundle\Targeting\ActionHandler\AssignTargetGroupAndSegment
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/pimcore/lib/Targeting/ActionHandler/AssignTargetGroup.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/Targeting/ActionHandler/AssignTargetGroupAndSegment.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/GDPR/Consent/ConsentCheckerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/pimcore/customer-management-framework-bundle/src/GDPR/Consent/ConsentChecker.php';

        $a = ($container->privates['Pimcore\\Targeting\\ConditionMatcher'] ?? $container->getConditionMatcherService());

        if (isset($container->privates['CustomerManagementFrameworkBundle\\Targeting\\ActionHandler\\AssignTargetGroupAndSegment'])) {
            return $container->privates['CustomerManagementFrameworkBundle\\Targeting\\ActionHandler\\AssignTargetGroupAndSegment'];
        }
        $b = ($container->privates['Pimcore\\Targeting\\Storage\\CookieStorage'] ?? $container->getCookieStorageService());

        if (isset($container->privates['CustomerManagementFrameworkBundle\\Targeting\\ActionHandler\\AssignTargetGroupAndSegment'])) {
            return $container->privates['CustomerManagementFrameworkBundle\\Targeting\\ActionHandler\\AssignTargetGroupAndSegment'];
        }

        $container->privates['CustomerManagementFrameworkBundle\\Targeting\\ActionHandler\\AssignTargetGroupAndSegment'] = $instance = new \CustomerManagementFrameworkBundle\Targeting\ActionHandler\AssignTargetGroupAndSegment($a, $b);

        $instance->setSegmentManager(($container->services['CustomerManagementFrameworkBundle\\SegmentManager\\SegmentManagerInterface'] ?? $container->getSegmentManagerInterfaceService()));
        $instance->setActivityManager(($container->services['CustomerManagementFrameworkBundle\\ActivityManager\\DefaultActivityManager'] ?? $container->load('getDefaultActivityManagerService')));
        $instance->setDataLoader(($container->privates['Pimcore\\Targeting\\DataLoader'] ?? $container->getDataLoaderService()));
        $instance->setConsentChecker(($container->privates['CustomerManagementFrameworkBundle\\GDPR\\Consent\\ConsentCheckerInterface'] ?? ($container->privates['CustomerManagementFrameworkBundle\\GDPR\\Consent\\ConsentCheckerInterface'] = new \CustomerManagementFrameworkBundle\GDPR\Consent\ConsentChecker())));

        return $instance;
    }
}
